{"version":3,"sources":["components/Note.js","services/notes.js","components/Notes.js","components/Counters.js","components/Greetings.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseURL","exports","getAll","request","axios","get","nonExisting","id","date","then","response","data","concat","create","newObject","post","update","put","Notification","message","Footer","style","color","fontStyle","fontSize","Notes","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","notesToShow","filter","useEffect","noteService","initialNotes","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","length","Date","toISOString","Math","random","onChange","target","value","type","Display","counter","Button","handleClick","text","History","allClicks","join","Counters","name","setCounter","left","setLeft","right","setRight","clicks","setClicks","setAll","changeByOne","console","log","Hello","age","getFullYear","Greetings","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ef76fee.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important\n        ? \"make not important\" : \"make important\"\n\n    return (\n        <li className=\"note\">\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    );\n};\n\nexport default Note;","import axios from 'axios';\n\n\nconst baseURL = \"/api/notes/\";\n\n\nconst getAll = () => {\n    const request = axios.get(baseURL);\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true,\n    }\n    return request.then(response => response.data.concat(nonExisting));\n};\n\nconst create = (newObject) => {\n    const request = axios.post(baseURL, newObject);\n    return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject);\n    return request.then(response => response.data);\n};\n\nconst exports = { getAll, create, update }\n\nexport default exports;","import React, { useState, useEffect } from 'react';\n\nimport Note from './Note';\nimport noteService from '../services/notes';\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n};\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    };\n\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>\n                Note app, Department of Computer Science, University of Helsinki 2021\n            </em>\n        </div>\n    )\n};\n\n\nconst Notes = (props) => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState(\"\");\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const addNote = (event) => {\n        event.preventDefault();\n        const newObject = {\n            id: (notes.length + 1),\n            content: newNote,\n            date: new Date().toISOString(),\n            important: (Math.random() < 0.5)\n        };\n\n        noteService\n            .create(newObject)\n            .then(returnedNote => {\n                setNotes(notes.concat(returnedNote));\n                setNewNote(\"\");\n            })\n    };\n\n    const handleNoteChange = (event) => {\n\n        setNewNote(event.target.value);\n    };\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important === true);\n\n    const toggleImportanceOf = (id) => {\n        const note = notes.find(n => n.id === id);\n        const changedNote = { ...note, important: !note.important };\n\n        noteService\n            .update(id, changedNote)\n            .then(returnedNote => {\n                setNotes(notes.map(note => {\n                    return (note.id !== id) ? note : returnedNote;\n                }));\n            })\n            .catch(error => {\n                let errorMessage = `the note '${note.content}' was already`;\n                errorMessage += \" deleted from server\";\n                setErrorMessage(errorMessage);\n                setTimeout(() => setErrorMessage(null), 5000);\n                setNotes(notes.filter(note => note.id !== id));\n            })\n    };\n\n    const hook = () => {\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes);\n            })\n    };\n    useEffect(hook, []);\n\n    return (\n        <>\n            <h1>Notes</h1>\n            <Notification message={errorMessage} />\n\n            <button onClick={() => setShowAll(!showAll)}>\n                show {showAll ? \"important\" : \"all\"}\n            </button>\n            <ul>\n                {notesToShow.map(note =>\n                    <Note key={note.id}\n                        note={note}\n                        toggleImportance={() => { toggleImportanceOf(note.id) }}\n                    />\n                )}\n            </ul>\n            <form onSubmit={addNote}>\n                <input onChange={handleNoteChange} value={newNote} />\n                <button type=\"submit\">Save</button>\n            </form>\n            <Footer />\n        </>\n    )\n};\n\n\nexport default Notes;","import React, { useState } from 'react';\n\n\nconst Display = ({ counter }) => <p>{counter}</p>;\n\nconst Button = ({ handleClick, text }) => (\n    <button onClick={handleClick}>{text}</button>\n);\n\nconst History = (props) => {\n    if (props.allClicks.length === 0) {\n        return (\n            <p>the app is used by pressing the buttons</p>\n        );\n    }\n    else {\n        return (\n            <p>button press history: {props.allClicks.join(' ')}</p>\n        );\n    }\n};\n\nconst Counters = () => {\n    const [counter, setCounter] = useState(0);\n    const [left, setLeft] = useState(0);\n    const [right, setRight] = useState(0);\n    // Using single state object\n    const [clicks, setClicks] = useState({\n        left: 0,\n        right: 0\n    });\n    const [allClicks, setAll] = useState([]);\n\n    const changeByOne = (counter) => () => {\n        setCounter(counter);\n    };\n    const setValue = (value) => () => {\n        setCounter(value);\n    };\n    const handleLeftClick = () => {\n        setLeft(clicks.left + 1);\n        // Using single state object\n        setClicks({\n            ...clicks,\n            left: left + 1\n        });\n\n        setAll(allClicks.concat(\"L\"));\n    }\n\n    const handleRightClick = () => {\n        setRight(right + 1);\n        // Using single state object \n        setClicks({\n            ...clicks,\n            right: right + 1\n        });\n\n        setAll(allClicks.concat(\"R\"))\n    }\n\n    const hello = (name) => () => {\n        console.log(\"Hello\", name);\n    };\n\n    return (\n        <>\n            <Display counter={counter} />\n            <Button\n                handleClick={changeByOne(counter + 1)}\n                text=\"plus\"\n            />\n            <Button\n                handleClick={changeByOne(counter - 1)}\n                text=\"minus\"\n            />\n            <Button\n                handleClick={setValue(0)}\n                text=\"reset\"\n            />\n            <div>\n                <Display counter={left} />\n                <Button\n                    handleClick={handleLeftClick}\n                    text=\"left\"\n                />\n                <Display counter={right} />\n                <Button\n                    handleClick={handleRightClick}\n                    text=\"right\"\n                />\n            </div>\n            <History allClicks={allClicks} text=\"right\" />\n\n            <Button\n                handleClick={hello(\"Sven\")}\n                text=\"hello\"\n            />\n        </>\n    );\n};\n\n\nexport default Counters;","const Hello = ({ name, age }) => {\n\n    const bornYear = () => new Date().getFullYear() - age;\n\n    return (\n        <div>\n            <p>\n                Hello, {name}! You are {age} years old.\n        </p>\n            <p>\n                So you were porbably born in {bornYear()}\n            </p>\n        </div>\n    )\n};\n\n\n\nconst Greetings = (props) => {\n    const name = \"Sven\";\n    const age = 30;\n\n    return (\n        <>\n            <h1>Greetings</h1>\n            <Hello name={name} age={age} />\n            <Hello name=\"Lang\" age={age + 30} />\n        </>\n    );\n};\n\nexport default Greetings;\n","import React from 'react';\nimport Notes from './components/Notes';\nimport Counters from './components/Counters';\nimport Greetings from './components/Greetings';\n\n\n\nconst App = (props) => {\n\n  return (\n    <>\n      <Counters />\n      <Greetings />\n      <Notes />     \n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}